100010xxxxxxxxxx (mov: register/memory to/from register)
1100011xxx000xxx (mov: immediate to register/memory)
1011xxxxmmmmmmmm (mov: immediate to register)
1010000xmmmmmmmm (mov: memory to accumulator)
1010001xmmmmmmmm (mov: accumulator to memory)
10001110xx0xxxxx (mov: register/memory to segment register)
10001100xx0xxxxx (mov: segment register to register/memory)
11111111xx110xxx (push: register/memory)
01010xxxmmmmmmmm (push: register)
000xx110mmmmmmmm (push: segment register)
10001111xx000xxx (pop: register/memory)
01011xxxmmmmmmmm (pop: register)
000xx111mmmmmmmm (pop: segment register)
1000011xxxxxxxxx (xchg: register/memory with register)
10010xxxmmmmmmmm (xchg: register with accumulator)
1110010xmmmmmmmm (in: fixed port)
1110110xmmmmmmmm (in: variable port)
1110011xmmmmmmmm (out: fixed port)
1110111xmmmmmmmm (out: variable port)
11010111mmmmmmmm (xlat)
10001101xxxxxxxx (lea)
11000101xxxxxxxx (lds)
11000100xxxxxxxx (les)
10011111mmmmmmmm (lahf)
10011110mmmmmmmm (sahf)
10011100mmmmmmmm (pushf)
10011101mmmmmmmm (popf)
000000xxxxxxxxxx (add: reg/memory with register to either)
100000xxxx000xxx (add: immediate to register/memory)
0000010xmmmmmmmm (add: immediate to accumulator)
000100xxxxxxxxxx (adc: reg/memory with register to either)
100000xxxx010xxx (adc: immediate to register/memory)
0001010xmmmmmmmm (adc: immediate to accumulator)
1111111xxx000xxx (inc: register/memory)
01000xxxmmmmmmmm (inc: register)
00110111mmmmmmmm (aaa)
00100111mmmmmmmm (daa)
001010xxxxxxxxxx (sub: reg/memory and register to either)
100000xxxx101xxx (sub: immediate from register/memory)
0010110xmmmmmmmm (sub: immediate from accumulator)
000110xxxxxxxxxx (sbb: reg/memory and register to either)
100000xxxx011xxx (sbb: immediate from register/memory)
0001110xmmmmmmmm (sbb: immediate from accumulator)
1111111xxx001xxx (dec: register/memory)
01001xxxmmmmmmmm (dec: register)
1111011xxx011xxx (neg)
001110xxxxxxxxxx (cmp: register/memory and register)
100000xxxx111xxx (cmp: immediate with register/memory)
0011110xmmmmmmmm (cmp: immediate with accumulator)
00111111mmmmmmmm (aas)
00101111mmmmmmmm (das)
1111011xxx100xxx (mul)
1111011xxx101xxx (imul)
1101010000001010 (aam)
1111011xxx110xxx (div)
1111011xxx111xxx (idiv)
1101010100001010 (aad)
10011000mmmmmmmm (cbw)
10011001mmmmmmmm (cwd)
1111011xxx010xxx (not)
110100xxxx100xxx (shl/sal)
110100xxxx101xxx (shr)
110100xxxx111xxx (sar)
110100xxxx000xxx (rol)
110100xxxx001xxx (ror)
110100xxxx010xxx (rcl)
110100xxxx011xxx (rcr)
001000xxxxxxxxxx (and: reg/memory with register to either)
1000000xxx100xxx (and: immediate to register/memory)
0010010xmmmmmmmm (and: immediate to accumulator)
000100xxxxxxxxxx (test: register/memory and register)
1111011xxx000xxx (test: immediate and register/memory)
1010100xmmmmmmmm (test: immediate data and accumulator)
000010xxxxxxxxxx (or: reg/memory and register to either)
1000000xxx001xxx (or: immediate to register/memory)
0000110xmmmmmmmm (or: immediate to accumulator)
001100xxxxxxxxxx (xor: reg/memory and register to either)
0011010xmmmmmmmm (xor: immediate to register/memory)
0011010xmmmmmmmm (xor: immediate to accumulator)
1111001xmmmmmmmm (rep)
1010010xmmmmmmmm (movs)
1010011xmmmmmmmm (cmps)
1010111xmmmmmmmm (scas)
1010110xmmmmmmmm (lods)
1010101xmmmmmmmm (stds)
11101000mmmmmmmm (call: direct within segment)
11111111xx010xxx (call: indirect within segment)
10011010mmmmmmmm (call: direct intersegment)
11111111xx011xxx (call: indirect intersegment)
11101001mmmmmmmm (jmp: direct within segment)
11101011mmmmmmmm (jmp: direct within segment-short)
11111111xx100xxx (jmp: indirect within segment)
11101010mmmmmmmm (jmp: direct intersegment)
11111111xx101xxx (jmp: indirect intersegment)
11000011mmmmmmmm (ret: within segment)
11000010mmmmmmmm (ret: within seg adding immed to sp)
11001011mmmmmmmm (ret: intersegment)
11001010mmmmmmmm (ret: intersegment adding immediate to sp)
01110100mmmmmmmm (je)
01111100mmmmmmmm (jl/jnge)
01111110mmmmmmmm (le/jng)
01110010mmmmmmmm (jb/jnae)
01110110mmmmmmmm (jbe/jna)
01111010mmmmmmmm (jp/jpe)
01110000mmmmmmmm (jo)
01111000mmmmmmmm (js)
01110101mmmmmmmm (jne/jnz)
01111101mmmmmmmm (jnl/jge)
01111111mmmmmmmm (jnle/jg)
01110011mmmmmmmm (jnb/jae)
01110111mmmmmmmm (jnbe/ja)
01111011mmmmmmmm (jnp/jpo)
01110001mmmmmmmm (jno)
01111001mmmmmmmm (jns)
11100010mmmmmmmm (loop)
11100001mmmmmmmm (loopz/loope)
11100000mmmmmmmm (loopnz/loopne)
11100011mmmmmmmm (jcxz)
11001101mmmmmmmm (int: type specified)
11001100mmmmmmmm (int: type 3)
11001110mmmmmmmm (into)
11001111mmmmmmmm (iret)
11111000mmmmmmmm (clc)
11110101mmmmmmmm (cmc)
11111001mmmmmmmm (stc)
11111100mmmmmmmm (cld)
11111101mmmmmmmm (std)
11111010mmmmmmmm (cli)
11111011mmmmmmmm (sti)
11110100mmmmmmmm (hlt)
10011011mmmmmmmm (wait)
11011xxxxxxxxxxx (esc)
11110000mmmmmmmm (lock)
001xx110mmmmmmmm (segment)
